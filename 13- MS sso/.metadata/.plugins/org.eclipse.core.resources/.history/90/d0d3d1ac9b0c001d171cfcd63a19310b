package lk.codelabs.rentcloud.rentui;

import org.springframework.stereotype.Controller;

@Controller
EnableOAuth2Sso
public class UIController extends WebSecurityConfigurerAdapter {

	 @Autowired
	    RestTemplate restTemplate;


	    @Override
	    protected void configure(HttpSecurity http) throws Exception {

	        http.authorizeRequests()
	                .antMatchers("/")
	                .permitAll()
	                .anyRequest()
	                .authenticated();
	    }

	    @RequestMapping(value = "/")
	    public String loadUI() {
	        return "home";
	    }

	    @RequestMapping(value = "/secure")
	    public String loadSecuredUI() {
	        return "secure";
	    }

	    @RequestMapping(value = "/customers")
	    public String loadCustomers(Model model) {

	        HttpHeaders httpHeaders = new HttpHeaders();
	        httpHeaders.add("Authorization", AccessToken.getAccessToken());
	        HttpEntity<Customer> customerHttpEntity = new HttpEntity<>(httpHeaders);
	        try {
	            ResponseEntity<Customer[]> responseEntity = restTemplate.exchange("http://localhost:8181/services/customers", HttpMethod.GET, customerHttpEntity, Customer[].class);
	            model.addAttribute("customers", responseEntity.getBody());
	        } catch (HttpStatusCodeException e) {
	            ResponseEntity responseEntity = ResponseEntity.status(e.getRawStatusCode()).headers(e.getResponseHeaders()).body(e.getResponseBodyAsString());
	            model.addAttribute("error", responseEntity);
	        }

	        return "secure";
	    }
